name: Deploy Model (Template)

on:
  # the workflow is triggered whenever a tag is pushed to the repository
  push:
    tags:
      - "*"
  # we can also run the workflow manually...
  workflow_dispatch:
    inputs:
      version:
        description: 'Manual version name'
        required: true
        type: string
  
permissions:
  contents: write
  id-token: write

jobs:

  # This job parses the git tag with the GTO GitHub Action to identify model registry actions
  parse:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: "Parse GTO tag"
      id: gto
      uses: iterative/gto-action@v2
    outputs:
      event: ${{ steps.gto.outputs.event }}
      name: ${{ steps.gto.outputs.name }}
      stage: ${{ steps.gto.outputs.stage }}
      version: ${{ steps.gto.outputs.version }}

  deploy-model:
    needs: parse
    # using the outputs from the "parse" job, we run this job only for actions
    # in the model registry and only when the model was assigned to a stage called "prod"
    if: "${{ needs.parse.outputs.event == 'assignment' }} && ${{ needs.parse.outputs.stage == 'prod' }}"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: iterative/setup-dvc@v1
    # this step uses DVC to download the model from our remote repository and deploys the model
    # Model deployment is mocked here as it is specific to each deployment environment
    - name: Get Model For Deployment
      run: |
        dvc artifacts get ${{ github.repositoryUrl }} ${{ needs.parse.outputs.name }} --rev ${{ needs.parse.outputs.version }}
        echo "The right model is available and you can use the rest of this command to deploy it. Good job!"      